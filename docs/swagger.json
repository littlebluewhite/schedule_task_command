{
    "swagger": "2.0",
    "info": {
        "description": "This is a schedule-command server.",
        "title": "Schedule-Task-Command swagger API",
        "termsOfService": "http://swagger.io/terms/",
        "contact": {
            "name": "Wilson",
            "url": "https://github.com/littlebluewhite",
            "email": "wwilson008@gmail.com"
        },
        "license": {
            "name": "Apache 2.0",
            "url": "http://www.apache.org/licenses/LICENSE-2.0.html"
        },
        "version": "2.0"
    },
    "host": "127.0.0.1:5487",
    "paths": {
        "/api/command_template/": {
            "get": {
                "description": "Get all command templates",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "command_template"
                ],
                "summary": "Show all command templates",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/e_command_template.CommandTemplate"
                            }
                        }
                    }
                }
            },
            "post": {
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "command_template"
                ],
                "summary": "Create command templates",
                "parameters": [
                    {
                        "description": "command template body",
                        "name": "command_template",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/e_command_template.CommandTemplateCreate"
                            }
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/e_command_template.CommandTemplate"
                            }
                        }
                    }
                }
            },
            "delete": {
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "command_template"
                ],
                "summary": "Delete command templates",
                "parameters": [
                    {
                        "description": "command_template id",
                        "name": "ids",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "integer"
                            }
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "delete successfully",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/api/command_template/{id}": {
            "get": {
                "description": "Get command templates by id",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "command_template"
                ],
                "summary": "Show command templates",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "command template id",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/e_command_template.CommandTemplate"
                        }
                    }
                }
            }
        },
        "/api/header_template/": {
            "get": {
                "description": "Get all header templates",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "header_template"
                ],
                "summary": "Show all header templates",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/e_header_template.HeaderTemplate"
                            }
                        }
                    }
                }
            },
            "post": {
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "header_template"
                ],
                "summary": "Create header templates",
                "parameters": [
                    {
                        "description": "header template body",
                        "name": "header_template",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/e_header_template.HeaderTemplateCreate"
                            }
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/e_header_template.HeaderTemplate"
                            }
                        }
                    }
                }
            },
            "delete": {
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "header_template"
                ],
                "summary": "Delete header templates",
                "parameters": [
                    {
                        "description": "header_template id",
                        "name": "ids",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "integer"
                            }
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "delete successfully",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            },
            "patch": {
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "header_template"
                ],
                "summary": "Update header templates",
                "parameters": [
                    {
                        "description": "modify header template body",
                        "name": "header_template",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/e_header_template.HeaderTemplateUpdate"
                            }
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "update successfully",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/api/header_template/{id}": {
            "get": {
                "description": "Get header templates by id",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "header_template"
                ],
                "summary": "Show header templates",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "header template id",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/e_header_template.HeaderTemplate"
                        }
                    }
                }
            }
        },
        "/api/ping/list": {
            "get": {
                "description": "test list ping",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "ping"
                ],
                "summary": "return list ping",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/ping.SwaggerListPing"
                            }
                        }
                    }
                }
            }
        },
        "/api/ping/test": {
            "get": {
                "description": "test ping",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "ping"
                ],
                "summary": "test ping",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/ping.SwaggerPing"
                        }
                    }
                }
            }
        },
        "/api/schedule/": {
            "get": {
                "description": "Get all schedules",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "schedule"
                ],
                "summary": "Show all schedules",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/e_schedule.Schedule"
                            }
                        }
                    }
                }
            },
            "post": {
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "schedule"
                ],
                "summary": "Create schedules",
                "parameters": [
                    {
                        "description": "schedule body",
                        "name": "schedule",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/e_schedule.ScheduleCreate"
                            }
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/e_schedule.Schedule"
                            }
                        }
                    }
                }
            },
            "delete": {
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "schedule"
                ],
                "summary": "Delete schedules",
                "parameters": [
                    {
                        "description": "schedule id",
                        "name": "ids",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "integer"
                            }
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "delete successfully",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            },
            "patch": {
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "schedule"
                ],
                "summary": "Update schedules",
                "parameters": [
                    {
                        "description": "modify schedule body",
                        "name": "schedule",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/e_schedule.ScheduleUpdate"
                            }
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "update successfully",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/api/schedule/{id}": {
            "get": {
                "description": "Get schedules by id",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "schedule"
                ],
                "summary": "Show schedules",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "schedule id",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/e_schedule.Schedule"
                        }
                    }
                }
            }
        },
        "/api/task_template/": {
            "get": {
                "description": "Get all task templates",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "task_template"
                ],
                "summary": "Show all task templates",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/e_task_template.TaskTemplate"
                            }
                        }
                    }
                }
            },
            "post": {
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "task_template"
                ],
                "summary": "Create task templates",
                "parameters": [
                    {
                        "description": "task template body",
                        "name": "task_template",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/e_task_template.TaskTemplateCreate"
                            }
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/e_task_template.TaskTemplate"
                            }
                        }
                    }
                }
            },
            "delete": {
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "task_template"
                ],
                "summary": "Delete task templates",
                "parameters": [
                    {
                        "description": "task_template id",
                        "name": "ids",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "integer"
                            }
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "delete successfully",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            },
            "patch": {
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "task_template"
                ],
                "summary": "Update task templates",
                "parameters": [
                    {
                        "description": "modify task template body",
                        "name": "task_template",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/e_task_template.TaskTemplateUpdate"
                            }
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "update successfully",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/api/time_template/": {
            "get": {
                "description": "Get all time templates",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "time_template"
                ],
                "summary": "Show all time templates",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/e_time_template.TimeTemplate"
                            }
                        }
                    }
                }
            },
            "post": {
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "time_template"
                ],
                "summary": "Create time templates",
                "parameters": [
                    {
                        "description": "time template body",
                        "name": "time_template",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/e_time_template.TimeTemplateCreate"
                            }
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/e_time_template.TimeTemplate"
                            }
                        }
                    }
                }
            },
            "delete": {
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "time_template"
                ],
                "summary": "Delete time templates",
                "parameters": [
                    {
                        "description": "time_template id",
                        "name": "ids",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "integer"
                            }
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "delete successfully",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            },
            "patch": {
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "time_template"
                ],
                "summary": "Update time templates",
                "parameters": [
                    {
                        "description": "modify time template body",
                        "name": "time_template",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/e_time_template.TimeTemplateUpdate"
                            }
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "update successfully",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/api/time_template/{id}": {
            "get": {
                "description": "Get time templates by id",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "time_template"
                ],
                "summary": "Show time templates",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "time template id",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/e_time_template.TimeTemplate"
                        }
                    }
                }
            }
        },
        "/task_template/{id}": {
            "get": {
                "description": "Get task templates by id",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "task_template"
                ],
                "summary": "Show task templates",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "task template id",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/e_task_template.TaskTemplate"
                        }
                    }
                }
            }
        }
    },
    "definitions": {
        "e_command_template.CommandTemplate": {
            "type": "object",
            "properties": {
                "created_at": {
                    "type": "string"
                },
                "description": {
                    "type": "string"
                },
                "host": {
                    "type": "string"
                },
                "http": {
                    "$ref": "#/definitions/e_command_template.HTTPSCommand"
                },
                "id": {
                    "type": "integer"
                },
                "monitor": {
                    "$ref": "#/definitions/e_command_template.Monitor"
                },
                "mqtt": {
                    "$ref": "#/definitions/e_command_template.MqttCommand"
                },
                "name": {
                    "type": "string"
                },
                "port": {
                    "type": "string"
                },
                "protocol": {
                    "type": "string"
                },
                "redis": {
                    "$ref": "#/definitions/e_command_template.RedisCommand"
                },
                "tags": {
                    "type": "array",
                    "items": {
                        "type": "integer"
                    }
                },
                "timeout": {
                    "type": "integer"
                },
                "updated_at": {
                    "type": "string"
                },
                "websocket": {
                    "$ref": "#/definitions/e_command_template.WebsocketCommand"
                }
            }
        },
        "e_command_template.CommandTemplateCreate": {
            "type": "object",
            "required": [
                "host",
                "name",
                "port",
                "protocol",
                "timeout"
            ],
            "properties": {
                "description": {
                    "type": "string"
                },
                "host": {
                    "type": "string"
                },
                "http": {
                    "$ref": "#/definitions/e_command_template.HTTPSCommand"
                },
                "monitor": {
                    "$ref": "#/definitions/e_command_template.Monitor"
                },
                "mqtt": {
                    "$ref": "#/definitions/e_command_template.MqttCommand"
                },
                "name": {
                    "type": "string"
                },
                "port": {
                    "type": "string"
                },
                "protocol": {
                    "type": "string"
                },
                "redis": {
                    "$ref": "#/definitions/e_command_template.RedisCommand"
                },
                "tags": {
                    "type": "array",
                    "items": {
                        "type": "integer"
                    }
                },
                "timeout": {
                    "type": "integer"
                },
                "websocket": {
                    "$ref": "#/definitions/e_command_template.WebsocketCommand"
                }
            }
        },
        "e_command_template.HTTPSCommand": {
            "type": "object",
            "properties": {
                "authorization_type": {
                    "type": "string"
                },
                "body": {
                    "type": "array",
                    "items": {
                        "type": "integer"
                    }
                },
                "body_type": {
                    "type": "string"
                },
                "header": {
                    "type": "array",
                    "items": {
                        "type": "integer"
                    }
                },
                "method": {
                    "type": "string"
                },
                "params": {
                    "type": "array",
                    "items": {
                        "type": "integer"
                    }
                },
                "url": {
                    "type": "string"
                }
            }
        },
        "e_command_template.MCondition": {
            "type": "object",
            "properties": {
                "calculate_type": {
                    "type": "string"
                },
                "order": {
                    "type": "integer"
                },
                "pre_logic_type": {
                    "type": "string"
                },
                "search_rule": {
                    "type": "string"
                },
                "value": {
                    "type": "string"
                }
            }
        },
        "e_command_template.Monitor": {
            "type": "object",
            "required": [
                "interval",
                "status_code"
            ],
            "properties": {
                "interval": {
                    "type": "integer"
                },
                "m_conditions": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/e_command_template.MCondition"
                    }
                },
                "status_code": {
                    "type": "integer"
                }
            }
        },
        "e_command_template.MqttCommand": {
            "type": "object",
            "required": [
                "topic",
                "type"
            ],
            "properties": {
                "header": {
                    "type": "array",
                    "items": {
                        "type": "integer"
                    }
                },
                "message": {
                    "type": "array",
                    "items": {
                        "type": "integer"
                    }
                },
                "topic": {
                    "type": "string"
                },
                "type": {
                    "type": "string"
                }
            }
        },
        "e_command_template.RedisCommand": {
            "type": "object",
            "required": [
                "type"
            ],
            "properties": {
                "db": {
                    "type": "integer"
                },
                "message": {
                    "type": "array",
                    "items": {
                        "type": "integer"
                    }
                },
                "password": {
                    "type": "string"
                },
                "topic": {
                    "type": "string"
                },
                "type": {
                    "type": "string"
                }
            }
        },
        "e_command_template.WebsocketCommand": {
            "type": "object",
            "required": [
                "url"
            ],
            "properties": {
                "header": {
                    "type": "array",
                    "items": {
                        "type": "integer"
                    }
                },
                "message": {
                    "type": "string"
                },
                "url": {
                    "type": "string"
                }
            }
        },
        "e_header_template.HeaderTemplate": {
            "type": "object",
            "properties": {
                "data": {
                    "type": "array",
                    "items": {
                        "type": "integer"
                    }
                },
                "id": {
                    "type": "integer"
                },
                "name": {
                    "type": "string"
                }
            }
        },
        "e_header_template.HeaderTemplateCreate": {
            "type": "object",
            "required": [
                "data",
                "name"
            ],
            "properties": {
                "data": {
                    "type": "array",
                    "items": {
                        "type": "integer"
                    }
                },
                "name": {
                    "type": "string"
                }
            }
        },
        "e_header_template.HeaderTemplateUpdate": {
            "type": "object",
            "required": [
                "id"
            ],
            "properties": {
                "data": {
                    "type": "array",
                    "items": {
                        "type": "integer"
                    }
                },
                "id": {
                    "type": "integer"
                },
                "name": {
                    "type": "string"
                }
            }
        },
        "e_schedule.Schedule": {
            "type": "object",
            "properties": {
                "created_at": {
                    "type": "string"
                },
                "description": {
                    "type": "string"
                },
                "enabled": {
                    "type": "boolean"
                },
                "id": {
                    "type": "integer"
                },
                "name": {
                    "type": "string"
                },
                "tags": {
                    "type": "array",
                    "items": {
                        "type": "integer"
                    }
                },
                "task_id": {
                    "type": "integer"
                },
                "time_data": {
                    "$ref": "#/definitions/e_schedule.TimeDatum"
                },
                "time_data_id": {
                    "type": "integer"
                },
                "updated_at": {
                    "type": "string"
                }
            }
        },
        "e_schedule.ScheduleCreate": {
            "type": "object",
            "required": [
                "name",
                "time_data"
            ],
            "properties": {
                "description": {
                    "type": "string"
                },
                "enabled": {
                    "type": "boolean"
                },
                "name": {
                    "type": "string"
                },
                "tags": {
                    "type": "array",
                    "items": {
                        "type": "integer"
                    }
                },
                "task_id": {
                    "type": "integer"
                },
                "time_data": {
                    "$ref": "#/definitions/e_schedule.TimeDatumCreate"
                }
            }
        },
        "e_schedule.ScheduleUpdate": {
            "type": "object",
            "required": [
                "id"
            ],
            "properties": {
                "description": {
                    "type": "string"
                },
                "enabled": {
                    "type": "boolean"
                },
                "id": {
                    "type": "integer"
                },
                "name": {
                    "type": "string"
                },
                "tags": {
                    "type": "array",
                    "items": {
                        "type": "integer"
                    }
                },
                "task_id": {
                    "type": "integer"
                },
                "time_data": {
                    "$ref": "#/definitions/e_schedule.TimeDatumUpdate"
                }
            }
        },
        "e_schedule.TimeDatum": {
            "type": "object",
            "properties": {
                "condition_type": {
                    "type": "string"
                },
                "end_date": {
                    "type": "string"
                },
                "end_time": {
                    "type": "string"
                },
                "interval_seconds": {
                    "type": "integer"
                },
                "repeat_type": {
                    "type": "string"
                },
                "start_date": {
                    "type": "string"
                },
                "start_time": {
                    "type": "string"
                },
                "t_condition": {
                    "type": "array",
                    "items": {
                        "type": "integer"
                    }
                }
            }
        },
        "e_schedule.TimeDatumCreate": {
            "type": "object",
            "required": [
                "end_time",
                "start_date",
                "start_time"
            ],
            "properties": {
                "condition_type": {
                    "type": "string"
                },
                "end_date": {
                    "type": "string"
                },
                "end_time": {
                    "type": "string"
                },
                "interval_seconds": {
                    "type": "integer"
                },
                "repeat_type": {
                    "type": "string"
                },
                "start_date": {
                    "type": "string"
                },
                "start_time": {
                    "type": "string"
                },
                "t_condition": {
                    "type": "array",
                    "items": {
                        "type": "integer"
                    }
                }
            }
        },
        "e_schedule.TimeDatumUpdate": {
            "type": "object",
            "required": [
                "end_time",
                "repeat_type",
                "start_date",
                "start_time",
                "t_condition"
            ],
            "properties": {
                "condition_type": {
                    "type": "string"
                },
                "end_date": {
                    "type": "string"
                },
                "end_time": {
                    "type": "string"
                },
                "interval_seconds": {
                    "type": "integer"
                },
                "repeat_type": {
                    "type": "string"
                },
                "start_date": {
                    "type": "string"
                },
                "start_time": {
                    "type": "string"
                },
                "t_condition": {
                    "type": "array",
                    "items": {
                        "type": "integer"
                    }
                }
            }
        },
        "e_task_template.TaskStage": {
            "type": "object",
            "properties": {
                "command_template": {
                    "$ref": "#/definitions/e_command_template.CommandTemplate"
                },
                "command_template_id": {
                    "type": "integer"
                },
                "id": {
                    "type": "integer"
                },
                "mode": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "stage_number": {
                    "type": "integer"
                },
                "tags": {
                    "type": "array",
                    "items": {
                        "type": "integer"
                    }
                }
            }
        },
        "e_task_template.TaskStageCreate": {
            "type": "object",
            "required": [
                "mode",
                "name",
                "stage_number"
            ],
            "properties": {
                "command_template_id": {
                    "type": "integer"
                },
                "mode": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "stage_number": {
                    "type": "integer"
                },
                "tags": {
                    "type": "array",
                    "items": {
                        "type": "integer"
                    }
                }
            }
        },
        "e_task_template.TaskStageUpdate": {
            "type": "object",
            "required": [
                "mode",
                "name",
                "stage_number"
            ],
            "properties": {
                "command_template_id": {
                    "type": "integer"
                },
                "id": {
                    "type": "integer"
                },
                "mode": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "stage_number": {
                    "type": "integer"
                },
                "tags": {
                    "type": "array",
                    "items": {
                        "type": "integer"
                    }
                }
            }
        },
        "e_task_template.TaskTemplate": {
            "type": "object",
            "properties": {
                "created_at": {
                    "type": "string"
                },
                "id": {
                    "type": "integer"
                },
                "name": {
                    "type": "string"
                },
                "stages": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/e_task_template.TaskStage"
                    }
                },
                "tags": {
                    "type": "array",
                    "items": {
                        "type": "integer"
                    }
                },
                "updated_at": {
                    "type": "string"
                },
                "variable": {
                    "type": "array",
                    "items": {
                        "type": "integer"
                    }
                }
            }
        },
        "e_task_template.TaskTemplateCreate": {
            "type": "object",
            "required": [
                "name"
            ],
            "properties": {
                "name": {
                    "type": "string"
                },
                "stages": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/e_task_template.TaskStageCreate"
                    }
                },
                "tags": {
                    "type": "array",
                    "items": {
                        "type": "integer"
                    }
                },
                "variable": {
                    "type": "array",
                    "items": {
                        "type": "integer"
                    }
                }
            }
        },
        "e_task_template.TaskTemplateUpdate": {
            "type": "object",
            "required": [
                "id"
            ],
            "properties": {
                "id": {
                    "type": "integer"
                },
                "name": {
                    "type": "string"
                },
                "stages": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/e_task_template.TaskStageUpdate"
                    }
                },
                "tags": {
                    "type": "array",
                    "items": {
                        "type": "integer"
                    }
                },
                "variable": {
                    "type": "array",
                    "items": {
                        "type": "integer"
                    }
                }
            }
        },
        "e_time_template.TimeDatum": {
            "type": "object",
            "properties": {
                "condition_type": {
                    "type": "string"
                },
                "end_date": {
                    "type": "string"
                },
                "end_time": {
                    "type": "string"
                },
                "interval_seconds": {
                    "type": "integer"
                },
                "repeat_type": {
                    "type": "string"
                },
                "start_date": {
                    "type": "string"
                },
                "start_time": {
                    "type": "string"
                },
                "t_condition": {
                    "type": "array",
                    "items": {
                        "type": "integer"
                    }
                }
            }
        },
        "e_time_template.TimeDatumCreate": {
            "type": "object",
            "required": [
                "end_time",
                "start_date",
                "start_time",
                "t_condition"
            ],
            "properties": {
                "condition_type": {
                    "type": "string"
                },
                "end_date": {
                    "type": "string"
                },
                "end_time": {
                    "type": "string"
                },
                "interval_seconds": {
                    "type": "integer"
                },
                "repeat_type": {
                    "type": "string"
                },
                "start_date": {
                    "type": "string"
                },
                "start_time": {
                    "type": "string"
                },
                "t_condition": {
                    "type": "array",
                    "items": {
                        "type": "integer"
                    }
                }
            }
        },
        "e_time_template.TimeDatumUpdate": {
            "type": "object",
            "required": [
                "end_time",
                "repeat_type",
                "start_date",
                "start_time",
                "t_condition"
            ],
            "properties": {
                "condition_type": {
                    "type": "string"
                },
                "end_date": {
                    "type": "string"
                },
                "end_time": {
                    "type": "string"
                },
                "interval_seconds": {
                    "type": "integer"
                },
                "repeat_type": {
                    "type": "string"
                },
                "start_date": {
                    "type": "string"
                },
                "start_time": {
                    "type": "string"
                },
                "t_condition": {
                    "type": "array",
                    "items": {
                        "type": "integer"
                    }
                }
            }
        },
        "e_time_template.TimeTemplate": {
            "type": "object",
            "properties": {
                "created_at": {
                    "type": "string"
                },
                "id": {
                    "type": "integer"
                },
                "name": {
                    "type": "string"
                },
                "time_data": {
                    "$ref": "#/definitions/e_time_template.TimeDatum"
                },
                "updated_at": {
                    "type": "string"
                }
            }
        },
        "e_time_template.TimeTemplateCreate": {
            "type": "object",
            "required": [
                "name",
                "time_data"
            ],
            "properties": {
                "name": {
                    "type": "string"
                },
                "time_data": {
                    "$ref": "#/definitions/e_time_template.TimeDatumCreate"
                }
            }
        },
        "e_time_template.TimeTemplateUpdate": {
            "type": "object",
            "required": [
                "id"
            ],
            "properties": {
                "id": {
                    "type": "integer"
                },
                "name": {
                    "type": "string"
                },
                "time_data": {
                    "$ref": "#/definitions/e_time_template.TimeDatumUpdate"
                }
            }
        },
        "ping.SwaggerListPing": {
            "type": "object",
            "properties": {
                "age": {
                    "type": "integer",
                    "example": 20
                },
                "name": {
                    "type": "string",
                    "example": "wilson"
                },
                "time": {
                    "type": "string",
                    "example": "2023-09-04T03:05:50.692675318+08:00"
                }
            }
        },
        "ping.SwaggerPing": {
            "type": "object",
            "properties": {
                "example": {
                    "type": "string",
                    "example": "asdfasdf"
                }
            }
        }
    }
}