// Code generated by gorm.io/gen. DO NOT EDIT.
// Code generated by gorm.io/gen. DO NOT EDIT.
// Code generated by gorm.io/gen. DO NOT EDIT.

package model

import (
	"encoding/json"
	"time"
)

const TableNameTimeDatum = "time_data"

// TimeDatum mapped from table <time_data>
type TimeDatum struct {
	ID              int32           `gorm:"column:id;primaryKey;autoIncrement:true" json:"id"`
	RepeatType      *string         `gorm:"column:repeat_type" json:"repeat_type"`
	StartDate       time.Time       `gorm:"column:start_date;not null" json:"start_date"`
	EndDate         *time.Time      `gorm:"column:end_date" json:"end_date"`
	StartTime       []byte          `gorm:"column:start_time;not null" json:"start_time"`
	EndTime         []byte          `gorm:"column:end_time;not null" json:"end_time"`
	IntervalSeconds *int32          `gorm:"column:interval_seconds" json:"interval_seconds"`
	ConditionType   *string         `gorm:"column:condition_type" json:"condition_type"`
	TCondition      json.RawMessage `gorm:"column:t_condition;default:json_array()" json:"t_condition"`
}

// TableName TimeDatum's table name
func (*TimeDatum) TableName() string {
	return TableNameTimeDatum
}
